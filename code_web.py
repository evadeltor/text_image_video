# Imports
import io
import os
import warnings
import requests
import getpass, os
import pandas as pd
from PIL import Image
import streamlit as st
from stability_sdk import client
import stability_sdk.interfaces.gooseai.generation.generation_pb2 as generation

# API
# Hugging Face
API_URL = "https://api-inference.huggingface.co/models/Gustavosta/MagicPrompt-Stable-Diffusion"
API_TOKEN = " "  # Add here your API
headers = {"Authorization": f"Bearer {API_TOKEN}"}


def query(payload):
    response = requests.post(API_URL, headers=headers, json=payload)
    return response.json()


# Stable Diffusion
os.environ['STABILITY_HOST'] = 'grpc.stability.ai:443'

############Web structure###############
# title web
st.title("Short Description Image Generator")
# short description
st.markdown(
    "From a short description and based on the database from MagicPrompt-Stable-Diffusion from HuggingFace + the API of StableDiffusion; images can be created based on few words; and the algorithm is in charge of adding a more detailed description. The idea of this web was to have a unique area in which you can obtain the prompt generated by the MagicPrompt-Stable-Diffusio and later on the image. However due to the huge amount of people using it an API Key of StableDiffusion will be needed or the Hugging Face webpage will need to be accessed in order to obtain the desired image since the payment of the images is required by DreamStudio.")
# word will be input of the user
word = st.text_input('Short image description', '')

if len(word) > 0:  # if we have a word
    output = query({"inputs": str(word), })  # we send it to the MaginPrompt algorithm
    key, value = list(output[0].items())[0]
    output = value
    st.write("Generated text:  ", output)  # we print the description value

    #Now we ask to the user for its API Key for DreamStudio
    key = st.text_input('Add your DreamStudio API Key', '')
    #Add some explanations
    st.markdown("For having your API key visit: https://beta.dreamstudio.ai/membership ")
    st.markdown(
        "Otherwise you can add the obtained prompt manually to https://huggingface.co/spaces/stabilityai/stable-diffusion ")
    st.markdown(
        " ðŸ“Œ Have you been using this app before? All the generated images have been paid to the DreamStudio app by me. If you have enjoy it and you want to invite me to a coffe you can do it here: https://paypal.me/evadeltor?country.x=ES&locale.x=es_ES")


    if len(key) > 0: #if they have writen a key
        os.environ['STABILITY_KEY'] = str(key)


        stability_api = client.StabilityInference(
            key=os.environ['STABILITY_KEY'],
            verbose=True,
        )

        answers = stability_api.generate(
            prompt=output #we set the prompt that we have already generated.
        )
        # iterating over the generator produces the api response
        for resp in answers:
            for artifact in resp.artifacts:
                if artifact.finish_reason == generation.FILTER:
                    warnings.warn(
                        "Your request activated the API's safety filters and could not be processed."
                        "Please modify the prompt and try again.")
                if artifact.type == generation.ARTIFACT_IMAGE:
                    img = Image.open(io.BytesIO(artifact.binary))
                    st.image(img, caption='Image generated')
